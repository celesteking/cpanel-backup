
CPanelBackup helps you generate and restore CPanel backups. It was initially written as Bacula pre-job-run hook, but was quickly expanded to do more.

h2. Usage

Use the CLI script provided, run @cpb_runner --help@ to see all the options.

Now let's go through the backup process.

h3. Backing up stuff

* Bacula runs a job.
** Bacula invokes pre-run hook on the client (@cpb_runner@)
** Bacula backups _/home_ & _/backups/cpanelbackup/accounts_ dirs
** _/backups/cpanelbackup/accounts_ is deleted on successful job completion

The hook is invoked with the following options:

bc. cpb_runner --action backup

The script now backups *all* cpanel accounts into _/backups/cpanelbackup/accounts_ dir, where CPanel *pkgacct* 's *.tar files are placed.

h3. Restoring

* Something initiates backup restoral
** Backup files are placed into:
*** CPanel backups (tar): _/backups/cpanelbackup/backups/cpanelbackup/accounts_
*** Home dir backups (plain): _/backups/cpanelbackup/home_
* User runs @cpb_runner@ script

The script could be run as following:

bc. cpb_runner --action restore --users theusername  --home-rsync --delete-source --smart-id

This will ask @cpb@ to move _theusername.tar_ file from _/backups/cpanelbackup/backups/cpanelbackup/accounts/_ to _/backups/cpanelbackup/accounts/_ dir, restore from it, rsync home dir from _/backups/cpanelbackup/home/theusername/_ to _/home/theusername/_ and delete all backup data for that user afterwards in case of success.

h2. Notes

h3. Logging

Log file is written into _/var/log/cp-backup-runner.log_ by default.

h3. Options

- --smart-id := Sets proper ownership on files below user homedir after rsync, but only in case _public_html_ has incorrect uid/gid. TODO: check how ACLs would behave.
- --process-sql-grants := Stores mysql user access information (AKA grant data) into mysql.sql file and incorporates it into final tar archive. It mimics what _pkgacct_ would've done, but skips dumping table data. Same applies during restoral - it tries to exec mysql statements from that file if it's present.

@see Other various funny options obtainable via --help.

h3. Misc

CPanel is a big nasty miserable mess in regards to general architecture and software design. It appears like tons of monkeys from different zoos were lured into one big purple cave where they were given a task of "getting API and CLI tools done immediately" without much thinking. [1] This could probably be the reason for all the workarounds we have to implement here.

fn1. "Author's":https://github.com/celesteking personal opinion